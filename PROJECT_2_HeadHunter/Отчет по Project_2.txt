Добрый день! Готова обратная связь по вашей работе.  Напомню критерии оценки проекта: 1.     Правильность решения задач, логичность построения запросов. 2.     Читабельность и верное форматирование запросов и кода на Python, наличие комментариев в запросах; аккуратность оформления решения. 3.     Логичность и полнота выводов 4.     Дополнительные исследования данных По каждому из критериев работа оценивается максимум в 2 балла. Всего можно получить 8 баллов за проект. Оценка вашей работы по вышеуказанным критериям: 1.  Правильность решения задач, логичность построения запросов - 2 балла. Все запросы написаны корректно в соответствии с требованиями, выводят те данные, которые необходимо. Средства языка SQL используются уместно. Стоит добавить себе в набор используемых инструкций "табличные выражения". Запрос 5.7 с помощью CTE (common table expression https://www.postgresql.org/docs/current/queries-with.html) мог бы быть написан в таком виде, что делало бы его гораздо компактнее и при этом более читабельным: with cte as ( select a.name, count(v.id) cnt from public.vacancies v join public.employers e on e.id = v.employer_id and e.name = 'Яндекс' join public.areas a on a.id = v.area_id and a.name in {cities} group by a.name) select 'Total' as name, sum(cnt) from cte as c union all select c.name, c.cnt from cte as c Для поиска без учета регистра можно также пользоваться оператором ILIKE https://postgrespro.ru/docs/postgresql/9.6/functions-matching#functions-like name ilike '%исследователь данных%' Альтернативный вариант записи ilike: name ~~ '%исследователь данных%'** 2.     Читабельность и верное форматирование запросов и кода на Python, наличие комментариев в запросах; аккуратность оформления решения - 2 балла. Сортировки и группировки лучше выполнять везде через элиасы столбцов, а не через порядковые номера. Это повышает читабельность запросов и делает их более устойчивыми к будущим изменениям. Запросы имеют форматирование, но видно, что оно выполняется вручную и не везде выполнено в одном стиле. Лучше для этого использовать автоматизированные средства. Для приведения запросов в единообразный вид, рекомендую пользоваться форматтерами, которые обычно встроены в интегрированные среды разработки, если нет, то их обычно можно доставить плагинами. Очень рекомендую их использование: один раз настроили, и ваши запросы всегда будут отформатированы единообразно. В крайнем случае можно найти онлайн-форматтеры (например: https://codebeautify.org/sqlformatter) Код на Python написан ясно и чисто. Комментарии присутствуют, но чаще являются избыточными, повторяя то, что и так очевидно из кода. В таком случаю, комментарии скорее отвлекают от самого кода, и усложняют его восприятия, просто раздувая объем запроса. 3.     Логичность и полнота выводов - 2 балла. Выводы сделаны после каждого модуля обстоятельно и подробно. 4.     Дополнительные исследования данных - 2 балла. Дополнительное исследование проведено хорошо, выводы сделаны. Итоги. Работа выполнена и оформлена очень хорошо. Получено 8 из 8 баллов. В завершение модуля SQL предлагаю посмотреть видео от Валерия Бабушкина (один из самых известных отечественных DS) о знаниях необходимых для начинающего DS https://www.youtube.com/watch?v=gGce2JDbJAQ, в частности, там упоминается SQL, как один из важных компонентов. В связи с этим советую не ограничиваться материалами курса и продолжать параллельно изучать и поддерживать уровень SQL, в качестве дополнительных площадок рекомендую -  https://bygroupby.dev/sql/sites_exercises.html. Желаю  вам дальнейших успехов в изучении Data Science! Если у вас остались вопросы по проекту, по оценке или любые вопросы, мысли, предложения по SQL - вы всегда можете написать в чате проекта в https://app.pachca.com/. С уважением, проверяющий ментор проекта Вячеслав Гнусарев.